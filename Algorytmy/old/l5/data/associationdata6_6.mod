param n, integer, >= 1; #

set V, default {0..n-1}; #

set E, within V cross V;

param capacity{(i,j) in E}, >= 0;

param source, symbolic, in V, default 0;

param sink, symbolic, in V, != source, default n-1;

var flow{(i,j) in E}, >= 0, <= capacity[i,j];

var maxFlow, >= 0;

s.t. condition_1{i in V: i<>source and i<>sink}:
   sum{(j,i) in E} flow[j,i] = sum{(i,j) in E} flow[i,j];
   
s.t. condition_2{i in V: i=source}:
   maxFlow = sum{(i,j) in E} flow[i,j];
   
s.t. condition_3{i in V: i=sink}:
   maxFlow = sum{(j,i) in E} flow[j,i] ;

maximize obj: maxFlow;

solve;

printf "Maximum flow: %s\n", maxFlow;

data;
param n := 130;
param : E :   capacity :=
0 1 1
0 2 1
0 3 1
0 4 1
0 5 1
0 6 1
0 7 1
0 8 1
0 9 1
0 10 1
0 11 1
0 12 1
0 13 1
0 14 1
0 15 1
0 16 1
0 17 1
0 18 1
0 19 1
0 20 1
0 21 1
0 22 1
0 23 1
0 24 1
0 25 1
0 26 1
0 27 1
0 28 1
0 29 1
0 30 1
0 31 1
0 32 1
0 33 1
0 34 1
0 35 1
0 36 1
0 37 1
0 38 1
0 39 1
0 40 1
0 41 1
0 42 1
0 43 1
0 44 1
0 45 1
0 46 1
0 47 1
0 48 1
0 49 1
0 50 1
0 51 1
0 52 1
0 53 1
0 54 1
0 55 1
0 56 1
0 57 1
0 58 1
0 59 1
0 60 1
0 61 1
0 62 1
0 63 1
0 64 1
1 118 1
1 69 1
1 106 1
1 80 1
1 108 1
1 68 1
2 93 1
2 119 1
2 66 1
2 78 1
2 88 1
2 82 1
3 96 1
3 110 1
3 75 1
3 118 1
3 100 1
3 87 1
4 102 1
4 90 1
4 99 1
4 103 1
4 110 1
4 71 1
5 80 1
5 123 1
5 102 1
5 75 1
5 81 1
5 78 1
6 109 1
6 72 1
6 91 1
6 83 1
6 68 1
6 74 1
7 128 1
7 127 1
7 114 1
7 65 1
7 66 1
7 97 1
8 68 1
8 79 1
8 117 1
8 95 1
8 71 1
8 69 1
9 100 1
9 77 1
9 65 1
9 102 1
9 105 1
9 80 1
10 81 1
10 120 1
10 69 1
10 89 1
10 94 1
10 67 1
11 70 1
11 123 1
11 99 1
11 112 1
11 66 1
11 115 1
12 81 1
12 66 1
12 124 1
12 92 1
12 99 1
12 90 1
13 99 1
13 103 1
13 73 1
13 74 1
13 71 1
13 97 1
14 78 1
14 115 1
14 79 1
14 91 1
14 99 1
14 114 1
15 118 1
15 96 1
15 103 1
15 123 1
15 86 1
15 114 1
16 125 1
16 128 1
16 105 1
16 70 1
16 97 1
16 115 1
17 92 1
17 82 1
17 106 1
17 78 1
17 115 1
17 84 1
18 78 1
18 66 1
18 111 1
18 105 1
18 106 1
18 81 1
19 78 1
19 94 1
19 93 1
19 125 1
19 120 1
19 97 1
20 123 1
20 69 1
20 65 1
20 97 1
20 103 1
20 101 1
21 104 1
21 92 1
21 127 1
21 72 1
21 113 1
21 119 1
22 101 1
22 92 1
22 68 1
22 86 1
22 127 1
22 107 1
23 109 1
23 111 1
23 81 1
23 114 1
23 112 1
23 90 1
24 66 1
24 110 1
24 115 1
24 123 1
24 101 1
24 87 1
25 68 1
25 98 1
25 118 1
25 80 1
25 72 1
25 71 1
26 88 1
26 126 1
26 65 1
26 113 1
26 105 1
26 82 1
27 94 1
27 93 1
27 88 1
27 119 1
27 80 1
27 86 1
28 112 1
28 83 1
28 121 1
28 93 1
28 76 1
28 96 1
29 128 1
29 105 1
29 80 1
29 78 1
29 123 1
29 108 1
30 68 1
30 101 1
30 117 1
30 72 1
30 80 1
30 112 1
31 109 1
31 90 1
31 93 1
31 65 1
31 127 1
31 111 1
32 101 1
32 103 1
32 100 1
32 88 1
32 85 1
32 98 1
33 94 1
33 89 1
33 67 1
33 70 1
33 127 1
33 82 1
34 103 1
34 109 1
34 127 1
34 121 1
34 78 1
34 124 1
35 95 1
35 128 1
35 81 1
35 121 1
35 86 1
35 98 1
36 115 1
36 71 1
36 113 1
36 91 1
36 75 1
36 127 1
37 128 1
37 112 1
37 124 1
37 108 1
37 70 1
37 111 1
38 76 1
38 117 1
38 101 1
38 70 1
38 126 1
38 73 1
39 107 1
39 121 1
39 124 1
39 72 1
39 108 1
39 116 1
40 113 1
40 68 1
40 73 1
40 101 1
40 99 1
40 77 1
41 124 1
41 100 1
41 84 1
41 66 1
41 108 1
41 75 1
42 74 1
42 73 1
42 93 1
42 101 1
42 88 1
42 97 1
43 84 1
43 75 1
43 121 1
43 111 1
43 100 1
43 104 1
44 128 1
44 69 1
44 72 1
44 97 1
44 90 1
44 68 1
45 96 1
45 89 1
45 65 1
45 79 1
45 124 1
45 97 1
46 75 1
46 128 1
46 90 1
46 91 1
46 81 1
46 77 1
47 70 1
47 77 1
47 117 1
47 122 1
47 71 1
47 73 1
48 120 1
48 96 1
48 111 1
48 70 1
48 113 1
48 99 1
49 104 1
49 66 1
49 98 1
49 96 1
49 73 1
49 126 1
50 122 1
50 106 1
50 109 1
50 103 1
50 67 1
50 79 1
51 65 1
51 117 1
51 68 1
51 115 1
51 125 1
51 122 1
52 93 1
52 81 1
52 128 1
52 75 1
52 115 1
52 102 1
53 78 1
53 79 1
53 85 1
53 125 1
53 128 1
53 80 1
54 88 1
54 75 1
54 68 1
54 83 1
54 127 1
54 98 1
55 128 1
55 97 1
55 115 1
55 101 1
55 105 1
55 108 1
56 85 1
56 77 1
56 84 1
56 79 1
56 109 1
56 107 1
57 103 1
57 89 1
57 69 1
57 71 1
57 67 1
57 118 1
58 122 1
58 117 1
58 123 1
58 118 1
58 121 1
58 72 1
59 101 1
59 82 1
59 126 1
59 83 1
59 92 1
59 107 1
60 119 1
60 99 1
60 96 1
60 107 1
60 116 1
60 76 1
61 113 1
61 117 1
61 99 1
61 101 1
61 67 1
61 116 1
62 99 1
62 78 1
62 127 1
62 118 1
62 110 1
62 80 1
63 116 1
63 127 1
63 74 1
63 113 1
63 87 1
63 111 1
64 91 1
64 97 1
64 98 1
64 123 1
64 85 1
64 114 1
65 129 1
66 129 1
67 129 1
68 129 1
69 129 1
70 129 1
71 129 1
72 129 1
73 129 1
74 129 1
75 129 1
76 129 1
77 129 1
78 129 1
79 129 1
80 129 1
81 129 1
82 129 1
83 129 1
84 129 1
85 129 1
86 129 1
87 129 1
88 129 1
89 129 1
90 129 1
91 129 1
92 129 1
93 129 1
94 129 1
95 129 1
96 129 1
97 129 1
98 129 1
99 129 1
100 129 1
101 129 1
102 129 1
103 129 1
104 129 1
105 129 1
106 129 1
107 129 1
108 129 1
109 129 1
110 129 1
111 129 1
112 129 1
113 129 1
114 129 1
115 129 1
116 129 1
117 129 1
118 129 1
119 129 1
120 129 1
121 129 1
122 129 1
123 129 1
124 129 1
125 129 1
126 129 1
127 129 1
128 129 1
;
end;
