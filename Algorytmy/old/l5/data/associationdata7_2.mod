param n, integer, >= 1; #

set V, default {0..n-1}; #

set E, within V cross V;

param capacity{(i,j) in E}, >= 0;

param source, symbolic, in V, default 0;

param sink, symbolic, in V, != source, default n-1;

var flow{(i,j) in E}, >= 0, <= capacity[i,j];

var maxFlow, >= 0;

s.t. condition_1{i in V: i<>source and i<>sink}:
   sum{(j,i) in E} flow[j,i] = sum{(i,j) in E} flow[i,j];
   
s.t. condition_2{i in V: i=source}:
   maxFlow = sum{(i,j) in E} flow[i,j];
   
s.t. condition_3{i in V: i=sink}:
   maxFlow = sum{(j,i) in E} flow[j,i] ;

maximize obj: maxFlow;

solve;

printf "Maximum flow: %s\n", maxFlow;

data;
param n := 258;
param : E :   capacity :=
0 1 1
0 2 1
0 3 1
0 4 1
0 5 1
0 6 1
0 7 1
0 8 1
0 9 1
0 10 1
0 11 1
0 12 1
0 13 1
0 14 1
0 15 1
0 16 1
0 17 1
0 18 1
0 19 1
0 20 1
0 21 1
0 22 1
0 23 1
0 24 1
0 25 1
0 26 1
0 27 1
0 28 1
0 29 1
0 30 1
0 31 1
0 32 1
0 33 1
0 34 1
0 35 1
0 36 1
0 37 1
0 38 1
0 39 1
0 40 1
0 41 1
0 42 1
0 43 1
0 44 1
0 45 1
0 46 1
0 47 1
0 48 1
0 49 1
0 50 1
0 51 1
0 52 1
0 53 1
0 54 1
0 55 1
0 56 1
0 57 1
0 58 1
0 59 1
0 60 1
0 61 1
0 62 1
0 63 1
0 64 1
0 65 1
0 66 1
0 67 1
0 68 1
0 69 1
0 70 1
0 71 1
0 72 1
0 73 1
0 74 1
0 75 1
0 76 1
0 77 1
0 78 1
0 79 1
0 80 1
0 81 1
0 82 1
0 83 1
0 84 1
0 85 1
0 86 1
0 87 1
0 88 1
0 89 1
0 90 1
0 91 1
0 92 1
0 93 1
0 94 1
0 95 1
0 96 1
0 97 1
0 98 1
0 99 1
0 100 1
0 101 1
0 102 1
0 103 1
0 104 1
0 105 1
0 106 1
0 107 1
0 108 1
0 109 1
0 110 1
0 111 1
0 112 1
0 113 1
0 114 1
0 115 1
0 116 1
0 117 1
0 118 1
0 119 1
0 120 1
0 121 1
0 122 1
0 123 1
0 124 1
0 125 1
0 126 1
0 127 1
0 128 1
1 158 1
1 130 1
2 130 1
2 202 1
3 236 1
3 217 1
4 182 1
4 170 1
5 143 1
5 214 1
6 153 1
6 179 1
7 256 1
7 183 1
8 133 1
8 180 1
9 242 1
9 250 1
10 191 1
10 224 1
11 149 1
11 139 1
12 247 1
12 205 1
13 232 1
13 224 1
14 224 1
14 226 1
15 251 1
15 164 1
16 230 1
16 146 1
17 228 1
17 152 1
18 178 1
18 163 1
19 142 1
19 224 1
20 227 1
20 158 1
21 175 1
21 150 1
22 236 1
22 160 1
23 227 1
23 174 1
24 242 1
24 181 1
25 157 1
25 247 1
26 202 1
26 221 1
27 133 1
27 129 1
28 154 1
28 178 1
29 241 1
29 175 1
30 205 1
30 165 1
31 131 1
31 222 1
32 140 1
32 160 1
33 193 1
33 188 1
34 185 1
34 200 1
35 238 1
35 218 1
36 234 1
36 143 1
37 250 1
37 139 1
38 247 1
38 142 1
39 180 1
39 179 1
40 152 1
40 177 1
41 191 1
41 256 1
42 204 1
42 243 1
43 200 1
43 178 1
44 189 1
44 140 1
45 225 1
45 192 1
46 237 1
46 140 1
47 197 1
47 148 1
48 191 1
48 252 1
49 254 1
49 141 1
50 160 1
50 166 1
51 244 1
51 242 1
52 150 1
52 142 1
53 227 1
53 134 1
54 208 1
54 143 1
55 215 1
55 167 1
56 147 1
56 189 1
57 203 1
57 192 1
58 191 1
58 145 1
59 182 1
59 181 1
60 167 1
60 231 1
61 243 1
61 185 1
62 131 1
62 138 1
63 145 1
63 238 1
64 230 1
64 155 1
65 232 1
65 208 1
66 245 1
66 143 1
67 186 1
67 152 1
68 147 1
68 227 1
69 188 1
69 135 1
70 208 1
70 167 1
71 237 1
71 230 1
72 135 1
72 173 1
73 179 1
73 188 1
74 197 1
74 224 1
75 256 1
75 208 1
76 244 1
76 147 1
77 137 1
77 243 1
78 133 1
78 183 1
79 241 1
79 242 1
80 188 1
80 181 1
81 156 1
81 234 1
82 234 1
82 156 1
83 141 1
83 204 1
84 214 1
84 145 1
85 229 1
85 138 1
86 140 1
86 240 1
87 172 1
87 247 1
88 239 1
88 250 1
89 254 1
89 216 1
90 185 1
90 160 1
91 217 1
91 137 1
92 252 1
92 254 1
93 213 1
93 158 1
94 178 1
94 135 1
95 129 1
95 206 1
96 138 1
96 156 1
97 206 1
97 201 1
98 159 1
98 162 1
99 159 1
99 172 1
100 180 1
100 197 1
101 163 1
101 226 1
102 175 1
102 200 1
103 150 1
103 129 1
104 212 1
104 201 1
105 229 1
105 156 1
106 216 1
106 144 1
107 238 1
107 142 1
108 211 1
108 256 1
109 159 1
109 203 1
110 242 1
110 154 1
111 251 1
111 194 1
112 224 1
112 174 1
113 195 1
113 193 1
114 225 1
114 203 1
115 181 1
115 203 1
116 153 1
116 233 1
117 142 1
117 156 1
118 233 1
118 160 1
119 233 1
119 154 1
120 135 1
120 203 1
121 159 1
121 222 1
122 204 1
122 212 1
123 205 1
123 255 1
124 198 1
124 176 1
125 153 1
125 152 1
126 199 1
126 146 1
127 129 1
127 253 1
128 245 1
128 189 1
129 257 1
130 257 1
131 257 1
132 257 1
133 257 1
134 257 1
135 257 1
136 257 1
137 257 1
138 257 1
139 257 1
140 257 1
141 257 1
142 257 1
143 257 1
144 257 1
145 257 1
146 257 1
147 257 1
148 257 1
149 257 1
150 257 1
151 257 1
152 257 1
153 257 1
154 257 1
155 257 1
156 257 1
157 257 1
158 257 1
159 257 1
160 257 1
161 257 1
162 257 1
163 257 1
164 257 1
165 257 1
166 257 1
167 257 1
168 257 1
169 257 1
170 257 1
171 257 1
172 257 1
173 257 1
174 257 1
175 257 1
176 257 1
177 257 1
178 257 1
179 257 1
180 257 1
181 257 1
182 257 1
183 257 1
184 257 1
185 257 1
186 257 1
187 257 1
188 257 1
189 257 1
190 257 1
191 257 1
192 257 1
193 257 1
194 257 1
195 257 1
196 257 1
197 257 1
198 257 1
199 257 1
200 257 1
201 257 1
202 257 1
203 257 1
204 257 1
205 257 1
206 257 1
207 257 1
208 257 1
209 257 1
210 257 1
211 257 1
212 257 1
213 257 1
214 257 1
215 257 1
216 257 1
217 257 1
218 257 1
219 257 1
220 257 1
221 257 1
222 257 1
223 257 1
224 257 1
225 257 1
226 257 1
227 257 1
228 257 1
229 257 1
230 257 1
231 257 1
232 257 1
233 257 1
234 257 1
235 257 1
236 257 1
237 257 1
238 257 1
239 257 1
240 257 1
241 257 1
242 257 1
243 257 1
244 257 1
245 257 1
246 257 1
247 257 1
248 257 1
249 257 1
250 257 1
251 257 1
252 257 1
253 257 1
254 257 1
255 257 1
256 257 1
;
end;
